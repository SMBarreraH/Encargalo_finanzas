// Generated by view binder compiler. Do not edit!
package com.example.encargalofinanzas.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.encargalofinanzas.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCostosBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAmortizacion;

  @NonNull
  public final Button btnCostos;

  @NonNull
  public final Button btnDepreciacion;

  @NonNull
  public final Button btnSueldoEmprendedor;

  private ActivityCostosBinding(@NonNull LinearLayout rootView, @NonNull Button btnAmortizacion,
      @NonNull Button btnCostos, @NonNull Button btnDepreciacion,
      @NonNull Button btnSueldoEmprendedor) {
    this.rootView = rootView;
    this.btnAmortizacion = btnAmortizacion;
    this.btnCostos = btnCostos;
    this.btnDepreciacion = btnDepreciacion;
    this.btnSueldoEmprendedor = btnSueldoEmprendedor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCostosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCostosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_costos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCostosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_amortizacion;
      Button btnAmortizacion = ViewBindings.findChildViewById(rootView, id);
      if (btnAmortizacion == null) {
        break missingId;
      }

      id = R.id.btn_costos;
      Button btnCostos = ViewBindings.findChildViewById(rootView, id);
      if (btnCostos == null) {
        break missingId;
      }

      id = R.id.btn_depreciacion;
      Button btnDepreciacion = ViewBindings.findChildViewById(rootView, id);
      if (btnDepreciacion == null) {
        break missingId;
      }

      id = R.id.btn_sueldo_emprendedor;
      Button btnSueldoEmprendedor = ViewBindings.findChildViewById(rootView, id);
      if (btnSueldoEmprendedor == null) {
        break missingId;
      }

      return new ActivityCostosBinding((LinearLayout) rootView, btnAmortizacion, btnCostos,
          btnDepreciacion, btnSueldoEmprendedor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
